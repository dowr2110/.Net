1. Что такое обобщение (generic)?

Термин обобщение означает параметризированный тип.

3. Как можно наложить определенное ограничение на параметр?

С помощью ключевого слова where T : (class, struct, name_class, name_class<T>, new() – это что-то, что имеет конструктор без параметров).

4. Как можно наложить несколько ограничений на параметр?

Через ,

class Folf<T> where T: class, new()

5. Перечислите все существующие ограничения на типы данных обобщения?

class, struct, name_class, name_class<T>, new() – это что-то, что имеет конструктор без параметров

9. Приведите примеры, когда обобщенный класс может действовать как базовый или производный класс.

Class Dog<T, V>: Folf<T> (Folf<T> - базовый)

T – параметр передаваемый базовому классу

V – параметр характерный только для производного класса0

Class Folf<T> : Animal (Folf<T> - производный)

10. В каких случаях в обобщениях может использоваться оператор default?

Когда в обобщении нужно присвоить переменным некоторое начальное значение, то на прямую это сделать нельзя, поэтому используется ключевое слово default(T)

Он присваивает ссылочным типам значение null, а значимым типам 0.

11. Поясните как использовать статические переменные в обобщенных классах.

В обобщённых классах определённым образом создаётся набор статических членов и его можно инициализировать без создания объекта

Folf<T>

{

Public static T speed;

}

Folf<string>.speed = “fast”;

Folf<int>.speed = 50;

12. Приведите пример обобщенного интерфейса.

Interface IGen<T>

{

Void Show();

Void Add();

}

13. В чем отличие обобщенных классов от обобщенных структур?

Они похожи но структуры нельзя наследовать.

14. Какие классы для работы с файлами вы знаете? Приведите пример

File, fileInfo